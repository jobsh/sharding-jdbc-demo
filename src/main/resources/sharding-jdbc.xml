<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sharding="http://shardingsphere.apache.org/schema/shardingsphere/sharding"
       xmlns:master-slave="http://shardingsphere.apache.org/schema/shardingsphere/masterslave"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://shardingsphere.apache.org/schema/shardingsphere/sharding
                        http://shardingsphere.apache.org/schema/shardingsphere/sharding/sharding.xsd
                        http://shardingsphere.apache.org/schema/shardingsphere/masterslave
                        http://shardingsphere.apache.org/schema/shardingsphere/masterslave/master-slave.xsd">
    <!-- ds0和slave0 是主从的关系 -->
    <bean id="ds0" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="username" value="root" />
        <property name="password" value="root" />
        <property name="jdbcUrl" value="jdbc:mysql://192.168.248.172/sharding_order?serverTimezone=Asia/Shanghai&amp;useSSL=false"/>
    </bean>
    <bean id="slave0" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="username" value="root" />
        <property name="password" value="root" />
        <property name="jdbcUrl" value="jdbc:mysql://192.168.248.171/sharding_order?serverTimezone=Asia/Shanghai&amp;useSSL=false"/>
    </bean>

    <bean id="ms1" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="username" value="root" />
        <property name="password" value="root" />
        <property name="jdbcUrl" value="jdbc:mysql://192.168.248.173/shard_order?serverTimezone=Asia/Shanghai&amp;useSSL=false"/>
    </bean>
    <!-- 注意sharding-jdbc是不能从主库（写库）中 读取数据的，即使这里配置的是RANDOM-->
    <master-slave:load-balance-algorithm id="msStrategy" type="RANDOM"/>

    <!-- 如果这两张表是绑定表的话，只有拥有相同分片规则的字段，才能成为绑定表的关系且绑定表的分片策略必须是一致的-->
<!--    <sharding:binding-table-rules>
        <sharding:binding-table-rule logic-tables="t_order,t_order_item"/>
    </sharding:binding-table-rules>-->
    <sharding:data-source id="sharding-data-source">
        <sharding:sharding-rule data-source-names="ds0,slave0,ms1">
            <sharding:master-slave-rules>
                <sharding:master-slave-rule id="ms0" master-data-source-name="ds0" slave-data-source-names="slave0"
                                            strategy-ref="msStrategy"/>
            </sharding:master-slave-rules>
            <sharding:table-rules>
                <!-- t_order 表的逻辑名称，mapper.xml中对表的操作就写这个名称， sharding-jdbc中可以把分库和分表放在一起，填写各自的配置规则就可以了-->
                <sharding:table-rule logic-table="t_order" actual-data-nodes="ms$->{0..1}.t_order$->{1..2}"
                                     database-strategy-ref="databaseStrategy" table-strategy-ref="tableStrategy"
                                     />
            </sharding:table-rules>
          <!--  <sharding:broadcast-table-rules>
                <sharding:broadcast-table-rule table="area"/>
            </sharding:broadcast-table-rules>-->

        </sharding:sharding-rule>
    </sharding:data-source>

    <!-- 使用雪花算法生成分布式ID -->
    <!--<sharding:key-generator id="snowflake" column="order_id" type="SNOWFLAKE" props-ref="snow"/>-->
    
    <!--<bean:properties id="snow">
        <prop key="worker.id">678</prop>
        <prop key="max.tolerate.time.difference.milliseconds">10</prop>
    </bean:properties>-->

    <!-- 配置数据库分片策略 -->
    <sharding:inline-strategy id="databaseStrategy" sharding-column="user_id"
                              algorithm-expression="ms$->{user_id % 2}" />

    <!-- 自己实现的分片策略 注入进去-->
    <!--<bean id="myShard" class="com.example.shardingjdbcdemo.sharding.MySharding"/>-->

    <!--<sharding:standard-strategy id="standard" sharding-column="order_id" precise-algorithm-ref="myShard"/>-->

    <!-- 配置表分片策略 -->
    <sharding:inline-strategy id="tableStrategy" sharding-column="order_id"
                              algorithm-expression="t_order$->{order_id % 2 +1}" />

    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="sharding-data-source"/>
        <property name="mapperLocations" value="classpath*:/mybatis/*.xml"/>
    </bean>

</beans>